#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# Author(s):  Admin9705
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
---
# RECALL KEY VARIABLES #########################################################
- name: 'Register TLD'
  shell: 'cat /pg/var/role.name'
  register: rolename
  ignore_errors: True

- name: 'Register TLD'
  shell: 'cat /pg/var/tld.status'
  register: toplevel
  ignore_errors: True

- name: Register Domain
  shell: 'cat /pg/var/server.domain'
  register: domain
  ignore_errors: True

- name: Register Domain
  shell: 'cat /pg/var/oauth.status'
  register: oauth
  ignore_errors: True

- name: Register IP
  shell: 'cat /pg/var/server.ip'
  register: ipaddress
  ignore_errors: True

- name: Register Ports
  shell: 'cat /pg/var/server.ports'
  register: ports
  ignore_errors: True

- name: Register HD Path
  shell: 'cat /pg/var/hd.path'
  register: path
  ignore_errors: True

- name: Register Auth Path
  shell: 'cat /pg/var/server.ht'
  register: auth
  ignore_errors: True

# OVERWRITE IMAGES #############################################################
- name: Check if Image Variable Exists
  stat:
    path: '/pg/var/image/{{pgrole}}'
  register: imagecheck

- name: 'Transfer Image Variable'
  shell: 'cat /pg/var/image/{{pgrole}}'
  register: imagetemp
  when: imagecheck.stat.exists

- name: 'If Fact Does Not Match - Disable TLD'
  set_fact:
    image: '{{imagetemp.stdout}}'
  when: imagecheck.stat.exists

# TOP LEVEL DOMAIN INFO SET ####################################################
- name: 'Provide TLD Information'
  set_fact:
    tldset: '{{domain.stdout}}'

# OAUTH INFO ###################################################################
- name: 'Provide OAuth Information'
  set_fact:
    gauth: '{{oauth.stdout}}'

# ROLE NAME ####################################################################
- name: 'Provide Role Name Information'
  set_fact:
    pgrole: '{{rolename.stdout}}'

# EXTERNAL PORT FOR END BANNER
- name: Export Internal Port
  shell: 'echo {{extport}} > /pg/tmp/program_port'
  ignore_errors: True
